{"version":3,"file":"app.js","sourceRoot":"","sources":["app/index.ts","app/node/boot.ts","app/node/server.ts","app/node/server_handleRequest.ts","app/node/server_handleRoot.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8BAA8B;AAE9B,CAAC;IACC,IAAM,IAAI,GAAG,iXAkBd,CAAC;AACF,CAAC,CAAC,EAAE,CAAA;ACtBJ,IAAU,IAAI,CAkBb;AAlBD,WAAU,IAAI;IAEZ,SAAgB,IAAI;QAClB,SAAS,EAAE,CAAC,IAAI,CACd;YACE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC5B,CAAC,EACD,UAAA,KAAK;YACH,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC;IARe,SAAI,OAQnB,CAAA;IAED,SAAe,SAAS;;;;;;wBAChB,aAAa,GAAG,KAAA,MAAM,CAAC,SAAS,CAAC,CAAC;wBAExC,qBAAM,aAAa,EAAA;;wBAAnB,SAAmB,CAAC;;;;;KACrB;AAEH,CAAC,EAlBS,IAAI,KAAJ,IAAI,QAkBb;AClBD,IAAU,IAAI,CAoCb;AApCD,WAAU,IAAI;IACZ,SAAsB,MAAM,CAAC,OAAe;;YAe1C,SAAS,OAAO,CAAC,IAAY;gBAC3B,OAAO,IAAI,OAAO,CAA+B,UAAA,OAAO;oBACtD,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAA0B,CAAC;oBACtD,IAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,UAAC,OAAO,EAAE,QAAQ;wBAC9C,KAAA,oBAAoB,CAAC,EAAE,OAAO,SAAA,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,MAAA,EAAE,OAAO,SAAA,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC;oBAC1E,CAAC,CAAC,CAAC;oBAEH,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE;wBACd,OAAO,CAAC,IAAI,CAAC,CAAC;oBAChB,CAAC,CAAC,CAAC;oBAEH,GAAG,CAAC,EAAE,CAAC,WAAW,EAAE;wBAClB,OAAO,CAAC,GAAG,CAAC,CAAC;oBACf,CAAC,CAAC,CAAC;oBAEH,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC;YACL,CAAC;;;;;wBA9BG,QAAQ,GAAG,CAAC,CAAC;wBACR,CAAC,GAAG,CAAC;;;6BAAE,CAAA,CAAC,GAAG,UAAU,CAAC,MAAM,CAAA;wBACnC,QAAQ,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBACrC,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC;wBAErB,UAAU,GAAG,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC;wBACtC,WAAW,GAAG,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC;wBAElC,qBAAM,UAAU,EAAA;;8BAAhB,SAAgB;;wBAAI,qBAAM,WAAW,EAAA;;8BAAjB,SAAiB;;;wBAA3C,GAAG,KAAwC;wBACjD,IAAI,GAAG;4BACL,sBAAO,GAAG,EAAC;;;wBATwB,CAAC,EAAE,CAAA;;;;;;KA+B3C;IAlCqB,WAAM,SAkC3B,CAAA;AACH,CAAC,EApCS,IAAI,KAAJ,IAAI,QAoCb;ACpCD,IAAU,IAAI,CAqDb;AArDD,WAAU,IAAI;IAYZ,SAAsB,oBAAoB,CAAC,OAAqC;;;;;;wBAEtE,OAAO,GAAsC,OAAO,QAA7C,EAAE,MAAM,GAA8B,OAAO,OAArC,EAAE,IAAI,GAAwB,OAAO,KAA/B,EAAE,OAAO,GAAe,OAAO,QAAtB,EAAE,QAAQ,GAAK,OAAO,SAAZ,CAAa;wBAEvD,EAAE,GAAG,OAAO,CAAC,IAAI,CAAwB,CAAC;wBAC1C,IAAI,GAAG,OAAO,CAAC,MAAM,CAA0B,CAAC;wBAChD,GAAG,GAAG,OAAO,CAAC,KAAK,CAAyB,CAAC;wBAE7C,UAAU,GAAG,GAAG,CAAC,KAAK,CAC1B,OAAO,CAAC,GAAG,EACX,IAAI,CAAC,sBAAsB,CAAC,CAAC;wBAEzB,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;6BACxF,CAAA,WAAW,KAAK,EAAE,IAAI,WAAW,KAAK,GAAG,CAAA,EAAzC,wBAAyC;wBAC3C,qBAAM,KAAA,iBAAiB,CAAC,OAAO,CAAC,EAAA;;wBAAhC,SAAgC,CAAC;wBACjC,sBAAO;;wBAGH,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;wBAEpC,qBAAM,qBAAqB,CAAC,YAAY,CAAC,EAAA;;wBAAvD,WAAW,GAAG,SAAyC;wBAC7D,IAAI,WAAW;4BACb,sBAAO,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,EAAC;wBAEnC,QAAQ,CAAC,UAAU,GAAG,GAAG,CAAC;wBAC1B,QAAQ,CAAC,GAAG,EAAE,CAAC;;;;;KAChB;IA1BqB,yBAAoB,uBA0BzC,CAAA;IAED,SAAS,qBAAqB,CAAC,QAAgB;QAC7C,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAwB,CAAC;QAChD,OAAO,IAAI,OAAO,CAAgB,UAAA,OAAO;YACvC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAC,KAAK,EAAE,MAAM;gBAClC,IAAI,MAAM;oBACR,OAAO,CAAC,MAAM,CAAC,CAAC;;oBAEhB,OAAO,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IAEL,CAAC;AAEH,CAAC,EArDS,IAAI,KAAJ,IAAI,QAqDb;ACrDD,IAAU,IAAI,CAwBb;AAxBD,WAAU,IAAI;IAEZ,IAAI,iBAA8C,CAAC;IAEnD,SAAsB,iBAAiB,CAAC,OAAqC;;YAQ3E,SAAe,cAAc;;;wBAC3B,sBAAO,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;gCACzC,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAwB,CAAC;gCAChD,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAC,KAAK,EAAE,IAAI;oCAClC,IAAI,KAAK;wCACP,MAAM,CAAC,KAAK,CAAC,CAAC;;wCAEd,OAAO,CAAC,IAAI,CAAC,CAAC;gCAClB,CAAC,CAAC,CAAC;4BACL,CAAC,CAAC,EAAC;;;aACJ;;;;;wBAjBD,IAAI,OAAO,iBAAiB,KAAK,QAAQ;4BACvC,iBAAiB,GAAG,cAAc,EAAE,CAAC;wBAEhB,qBAAM,iBAAiB,EAAA;;wBAAxC,cAAc,GAAG,SAAuB;wBAE5C,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;;;;;KAaxC;IAnBqB,sBAAiB,oBAmBtC,CAAA;AACH,CAAC,EAxBS,IAAI,KAAJ,IAAI,QAwBb","sourcesContent":["/// <reference types=\"node\" />\r\n\r\n(function () {\r\n  const html = `\r\n  <!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n    <title>PE.js</title>\r\n</head>\r\n<body>\r\n    <h2>PE.js</h2>\r\n    <p>\r\n        Loading...\r\n    </p>\r\n\r\n    <script></script>\r\n</body>\r\n</html>\r\n`;\r\n})()","namespace node {\r\n\r\n  export function boot() {\r\n    bootAsync().then(\r\n      () => {\r\n        console.log('COMPLETED>');\r\n      },\r\n      error => {\r\n        process.exit(error.message.charCodeAt(0));\r\n      });\r\n  }\r\n\r\n  async function bootAsync() {\r\n    const serverPromise = server(__dirname);\r\n\r\n    await serverPromise;\r\n  }\r\n\r\n}","namespace node {\r\n  export async function server(baseDir: string) {\r\n\r\n    let basePort = 0;\r\n    for (let i = 0; i < __filename.length; i++) {\r\n      basePort += __filename.charCodeAt(i);\r\n      basePort = basePort % 4000;\r\n\r\n      const lowPromise = tryPort(6340 + basePort);\r\n      const highPromise = tryPort(12891 + basePort);\r\n\r\n      const srv = await lowPromise || await highPromise;\r\n      if (srv)\r\n        return srv;\r\n    }\r\n\r\n    function tryPort(port: number) {\r\n      return new Promise<import('http').Server | null>(resolve => {\r\n        const http = require('http') as typeof import('http');\r\n        const srv = http.createServer((request, response) => {\r\n          server_handleRequest({ baseDir, server: srv, port, request, response });\r\n        });\r\n\r\n        srv.on('error', () => {\r\n          resolve(null);\r\n        });\r\n\r\n        srv.on('listening', () => {\r\n          resolve(srv);\r\n        });\r\n\r\n        srv.listen(port);\r\n      });\r\n    }\r\n\r\n  }\r\n}\r\n","namespace node {\r\n\r\n  export declare namespace server_handleRequest {\r\n    type Options = {\r\n      baseDir: string,\r\n      server: import('http').Server,\r\n      port: number,\r\n      request: import('http').IncomingMessage,\r\n      response: import('http').ServerResponse\r\n    };\r\n  }\r\n\r\n  export async function server_handleRequest(options: server_handleRequest.Options) {\r\n    \r\n    const { baseDir, server, port, request, response } = options;\r\n\r\n    const fs = require('fs') as typeof import('fs');\r\n    const path = require('path') as typeof import('path');\r\n    const URL = require('url') as typeof import('url');\r\n\r\n    const requestURL = URL.parse(\r\n      request.url,\r\n      true /* parseQueryString */);\r\n\r\n    const requestPath = requestURL.path.replace(/^[\\.\\/\\\\]+/, '').replace(/\\[\\.\\/\\\\]*\\//g, '/');\r\n    if (requestPath === '' || requestPath === '/') {\r\n      await server_handleRoot(options);\r\n      return;\r\n    }\r\n\r\n    const resolvedPath = path.resolve(baseDir, requestPath);\r\n    \r\n    const fileContent = await readFileIfExistsAsync(resolvedPath);\r\n    if (fileContent)\r\n      return response.end(fileContent);\r\n\r\n    response.statusCode = 404;\r\n    response.end();\r\n  }\r\n\r\n  function readFileIfExistsAsync(fullPath: string) {\r\n    const fs = require('fs') as typeof import('fs');\r\n    return new Promise<Buffer | null>(resolve => {\r\n      fs.readFile(fullPath, (error, buffer) => {\r\n        if (buffer)\r\n          resolve(buffer);\r\n        else\r\n          resolve(null);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n}","namespace node {\r\n\r\n  let thisScriptPromise: Promise<Buffer> | undefined;\r\n\r\n  export async function server_handleRoot(options: server_handleRequest.Options) {\r\n    if (typeof thisScriptPromise !== 'string')\r\n      thisScriptPromise = readThisScript();\r\n    \r\n    const thisScriptData = await thisScriptPromise\r\n    \r\n      options.response.end(thisScriptData);\r\n\r\n    async function readThisScript() {\r\n      return new Promise<Buffer>((resolve, reject) => {\r\n        const fs = require('fs') as typeof import('fs');\r\n        fs.readFile(__filename, (error, data) => {\r\n          if (error)\r\n            reject(error);\r\n          else\r\n            resolve(data);\r\n        });\r\n      });\r\n    }\r\n  }\r\n}"]}